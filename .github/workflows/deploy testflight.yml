name: Deploy to testflight

on:
  push:
    branches: [ stable ]
    
jobs:
  environment: 
    scheme: ${{ 'default' }}
    archive_path: ${{ 'archive' }}
    ipa_path: ${{ 'ipa_file.ipa' }}
    testflight_deploy_conf: ${{ 'testflight_deploy_conf.plist' }}

  build_and_test:
    name: Build and Deploy
    runs-on: macos-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Xcode version
        run: /usr/bin/xcodebuild -version

      - name: Parse secret
        run: |
          echo "$AMPLIFY_CONF" | base64 -d > ./amplifyconfiguration.json
          echo "$AWS_CONF" | base64 -d > ./awsconfiguration.json
          echo "$TESTFLIGHT_DEPLOY_CONF" | base64 -d > ./"$testflight_deploy_conf"
          echo "$APPSTORE_API_PRIVATE_KEY" | base64 -d > ./'private_keys/AuthKey_$PRIV_API_KEY.p8'
        env:
          AMPLIFY_CONF: ${{ secrets.AMPLIFY_CONF }}
          AWS_CONF: ${{ secrets.AWS_CONF }}
          TESTFLIGHT_DEPLOY_CONF: ${{ secrets.TESTFLIGHT_DEPLOY_CONF }}
          APPSTORE_API_PRIVATE_KEY: ${{ secrets.APPSTORE_API_PRIVATE_KEY }} 
          PRIV_API_KEY: "priv_api_key"

      - name: Set Default Scheme
        run: |
          scheme_list=$(xcodebuild -list -json | tr -d "\n")
          default=$(echo $scheme_list | ruby -e "require 'json'; puts JSON.parse(STDIN.gets)['project']['targets'][0]")
          echo $default | cat >default
          echo Using default scheme: $default

      - name: Build archive
        run: |
          if [ $scheme = default ]; then scheme=$(cat default); fi
          xcodebuild -scheme "$scheme" archive -archivePath "$archive_path"/"$scheme".xcarchive

      - name: Save archive in Artifact
        run: if [ $scheme = default ]; then scheme=$(cat default); fi
        uses: actions/upload-artifact@v2
        with:
          name: "archive/$GITHUB_SHA"
          path: 
            "$archive_path"/"$scheme".xcarchive

      - name: Export to ipa
        env:
          scheme: ${{ 'default' }}
        run: | 
          if [ $scheme = default ]; then scheme=$(cat default); fi
          xcodebuild -exportArchive -archivePath "$archive_path/$scheme.xcarchive" -exportPath "$ipa_path" -exportOptionsPlist "$testflight_deploy_conf"

      - name: 'Upload app to TestFlight'
          uses: apple-actions/upload-testflight-build@v1
          with: 
            app-path: "$ipa_path"
            issuer-id: ${{ secrets.APPSTORE_ISSUER_ID }}
            api-key-id: ${{ secrets.APPSTORE_API_KEY_ID }}
            api-private-key: ${{ secrets.PRIV_API_KEY }}