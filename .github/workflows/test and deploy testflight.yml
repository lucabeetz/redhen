name: iOS starter workflow

on:
  push:
    branches: [ dev ]
    
jobs:
  environment: 
    scheme: 'default'
    archive_path: 'archive'
    ipa_path: 'ipa_file.ipa'
    testflight_deploy_conf: 'testflight_deploy_conf.plist'

  build_and_test:
    name: Build and Test
    runs-on: macos-latest    
    strategy:
      matrix: 
        destination: [
          "'platform=iOS Simulator,name=iPhone 13 Pro Max,OS=latest'",
          "'platform=iOS Simulator,name=iPhone 11,OS=latest'"]

    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Xcode version
        run: /usr/bin/xcodebuild -version
      - name: Parse secret
        run: |
          echo "$AMPLIFY_CONF" | base64 -d > ./amplifyconfiguration.json
          echo "AWS_CONF" | base64 -d > ./awsconfiguration.json
        env:
          AMPLIFY_CONF: ${{ secrets.AMPLIFY_CONF }}
          AWS_CONF: ${{ secrets.AWS_CONF }}
      - name: Build for testing
        env:
          scheme: ${{ 'default' }}
        run: |
          xcodebuild build-for-testing -scheme "Red Hen" -destination ${{ matrix.destination }}
      - name: Test
        env:
          scheme: ${{ 'default' }}
        run: | 
          xcodebuild test-without-building -scheme "Red Hen" -destination ${{ matrix.destination }}
          
  build_and_deploy:
    name: Build and Deploy
    needs: build_and_test
    runs-on: macos-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Xcode version
        run: /usr/bin/xcodebuild -version
      - name: Parse secret
        run: |
          echo "$AMPLIFY_CONF" | base64 -d > ./amplifyconfiguration.json
          echo "$AWS_CONF" | base64 -d > ./awsconfiguration.json
        env:
          AMPLIFY_CONF: ${{ secrets.AMPLIFY_CONF }}
          AWS_CONF: ${{ secrets.AWS_CONF }}
      - name: Build archive
        run: |
          xcodebuild -scheme "Red Hen" archive -archivePath "$archive_path/Red Hen.xcarchive"
      - name: Save archive in Artifact
        uses: actions/upload-artifact@v2
        with:
          name: "archive/$GITHUB_SHA"
          path: 
            "$archive_path/Red Hen.xcarchive"
      - name: Parse upload secrets
        run: |
          echo "$TESTFLIGHT_DEPLOY_CONF" | base64 -d > ./"$testflight_deploy_conf"
          echo "$APPSTORE_API_PRIVATE_KEY" | base64 -d > ./'private_keys/AuthKey_$PRIV_API_KEY.p8'
        env:
          TESTFLIGHT_DEPLOY_CONF: ${{ secrets.TESTFLIGHT_DEPLOY_CONF }}
          APPSTORE_API_PRIVATE_KEY: ${{ secrets.APPSTORE_API_PRIVATE_KEY }} 
          PRIV_API_KEY: "priv_api_key"
      - name: Export to ipa
        run: | 
          xcodebuild -exportArchive -archivePath "$archive_path/Red Hen.xcarchive" -exportPath "$ipa_path" -exportOptionsPlist "$testflight_deploy_conf"
      - name: Upload app to TestFlight
        uses: apple-actions/upload-testflight-build@v1
        with: 
          app-path: "$ipa_path"
          issuer-id: ${{ secrets.APPSTORE_ISSUER_ID }}
          api-key-id: ${{ secrets.APPSTORE_API_KEY_ID }}
          api-private-key: ${{ secrets.PRIV_API_KEY }}